const express = require("express");
const router = express.Router();
const studentDetail = require("../../models/studentschema");
const chats = require("../../models/ChatSchema")
router.post("/getmessages", async (req, res) => {
  console.log("got request");
  const { id } = req.body;
  try {
    const data = await studentDetail.findById(id).populate("chatID");

    if (data.chatID) {
      console.log("got the user id");
      var conversations = data.chatID;
      res.json({ success: true, conversations });
    } else {
      console.log("new chat creating");
      const newChat = new chats({
        convoType: "single",
      });
      const savedChat = await newChat.save();
      data.chatID = savedChat._id;
      await data.save();

      const d = await studentDetail.findById(id).populate("chatID");
      const conversations = d.chatID;
      res.json({ success: true, conversations });
    }
  } catch (err) {
    console.log(err);
  }
});

router.post("/XsendMessage", async (req, res) => {
  console.log("got the message");
  const { message, senderID, chatID,} = req.body;
  console.log("chat id you are searching for");
  try {
    const chatData = await chats.findById(chatID);
    if (chatData) {
      const messageX = {
        senderID: senderID,
        message: message,
        dateStamp: Date.now(),
      };
      chatData.messages? chatData.messages.push(messageX):chatData.messages= messageX;

      await chatData.save();
    }
    const userdata = await studentDetail
      .findById(senderID)
      .populate("chatID");
    const conversations = userdata.chatID;
    res.json({ success: true, conversations });

    if (!chatData) {
      console.log("User2 or conversation not found.");
      res.json({ success: false });
    }
  } catch (error) {
    console.error("Error adding notification:", error);
  }
});































































































































































































































































































































































































































































































































































module.exports = router;
